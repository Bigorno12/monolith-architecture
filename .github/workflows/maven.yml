name: Java CI with Maven

on:
  push:
    branches-ignore:
      - 'dependabot/**'
  pull_request:
    branches: [ "main" ]
  create:
    branches:
      - '**'

permissions:
  contents: read
  security-events: write
  statuses: write

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
      statuses: write
    steps:
      - uses: actions/checkout@v5
      - name: Set up JDK 21
        uses: actions/setup-java@v5
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Cache Maven Packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: Run Unit test
        run: mvn test
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Update commit status
        if: always()
        uses: myrotvorets/set-commit-status-action@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          sha: ${{ github.event.pull_request.head.sha || github.sha }}
          status: ${{ job.status }}
          context: 'Build validation'
          description: 'Build status for branch verification'
          allowForks: false

  check_build:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
      statuses: write
    steps:
      - name: Check build status
        run: exit 1
        if: ${{ failure() }}

env:
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
  MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
  MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
  KEYCLOAK_ADMIN_PASSWORD: ${{ secrets.KEYCLOAK_ADMIN_PASSWORD }}
  KEYCLOAK_ADMIN: ${{ secrets.KEYCLOAK_ADMIN }}